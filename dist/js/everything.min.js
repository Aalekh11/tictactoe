var gameLogic;!function(a){function b(){for(var b=[],c=0;c<a.ROWS;c++){b[c]=[];for(var d=0;d<a.COLS;d++)b[c][d]=""}return b}function c(){return{board:b(),delta:null}}function d(b){for(var c=0;c<a.ROWS;c++)for(var d=0;d<a.COLS;d++)if(""===b[c][d])return!1;return!0}function e(b){for(var c="",d=0;d<a.ROWS;d++)for(var e=0;e<a.COLS;e++){var f=b[d][e];c+=""===f?" ":f}for(var g=["XXX......","...XXX...","......XXX","X..X..X..",".X..X..X.","..X..X..X","X...X...X","..X.X.X.."],h=0,i=g;h<i.length;h++){var j=i[h],k=new RegExp(j),l=new RegExp(j.replace(/X/g,"O"));if(k.test(c))return"X";if(l.test(c))return"O"}return""}function f(a,b,f,g){a||(a=c());var h=a.board;if(""!==h[b][f])throw new Error("One can only make a move in an empty position!");if(""!==e(h)||d(h))throw new Error("Can only make a move if the game is not over!");var i=angular.copy(h);i[b][f]=0===g?"X":"O";var j,k,l=e(i);""!==l||d(i)?(k=-1,j="X"===l?[1,0]:"O"===l?[0,1]:[0,0]):(k=1-g,j=null);var m={row:b,col:f},n={delta:m,board:i};return{endMatchScores:j,turnIndexAfterMove:k,stateAfterMove:n}}function g(){return{endMatchScores:null,turnIndexAfterMove:0,stateAfterMove:c()}}function h(a){var b=a.turnIndexBeforeMove,c=a.stateBeforeMove,d=a.move;if(c||0!==b||!angular.equals(g(),d)){var e=d.stateAfterMove.delta,h=e.row,i=e.col,j=f(c,h,i,b);if(!angular.equals(d,j))throw new Error("Expected move="+angular.toJson(j,!0)+", but got stateTransition="+angular.toJson(a,!0))}}function i(){var b=a.createMove(null,0,0,0);log.log("move=",b);var c={turnIndexBeforeMove:0,stateBeforeMove:null,move:b,numberOfPlayers:2};a.checkMoveOk(c)}a.ROWS=3,a.COLS=3,a.getInitialState=c,a.createMove=f,a.createInitialMove=g,a.checkMoveOk=h,a.forSimpleTestHtml=i}(gameLogic||(gameLogic={}));var game;!function(a){function b(){c(),translate.setTranslations(d()),translate.setLanguage("en"),resizeGameAreaService.setWidthToHeight(1),moveService.setGame({minNumberOfPlayers:2,maxNumberOfPlayers:2,checkMoveOk:gameLogic.checkMoveOk,updateUI:e,gotMessageFromPlatform:null})}function c(){if("serviceWorker"in navigator){var a=navigator;log.log("Calling serviceWorker.register"),a.serviceWorker.register("service-worker.js").then(function(a){log.log("ServiceWorker registration successful with scope: ",a.scope)})["catch"](function(a){log.log("ServiceWorker registration failed: ",a)})}}function d(){return{}}function e(b){log.info("Game got updateUI:",b),a.didMakeMove=!1,a.currentUpdateUI=b,g(),a.state=b.move.stateAfterMove,j()?(a.state=gameLogic.getInitialState(),n()&&i(gameLogic.createInitialMove())):a.animationEndedTimeout=$timeout(f,500)}function f(){log.info("Animation ended"),h()}function g(){a.animationEndedTimeout&&($timeout.cancel(a.animationEndedTimeout),a.animationEndedTimeout=null)}function h(){if(l()){var b=aiService.findComputerMove(a.currentUpdateUI.move);log.info("Computer move: ",b),i(b)}}function i(b){a.didMakeMove||(a.didMakeMove=!0,moveService.makeMove(b))}function j(){return!a.currentUpdateUI.move.stateAfterMove}function k(){return""===a.currentUpdateUI.playersInfo[a.currentUpdateUI.yourPlayerIndex].playerId}function l(){return n()&&k()}function m(){return n()&&!k()}function n(){return!a.didMakeMove&&a.currentUpdateUI.move.turnIndexAfterMove>=0&&a.currentUpdateUI.yourPlayerIndex===a.currentUpdateUI.move.turnIndexAfterMove}function o(b,c){if(log.info("Clicked on cell:",b,c),m()){if("?throwException"===window.location.search)throw new Error("Throwing the error because URL has '?throwException'");var d=null;try{d=gameLogic.createMove(a.state,b,c,a.currentUpdateUI.move.turnIndexAfterMove)}catch(e){return void log.info(["Cell is already full in position:",b,c])}i(d)}}function p(b,c){var d=a.state.board[b][c];return""!==d}function q(b,c){return"X"===a.state.board[b][c]}function r(b,c){return"O"===a.state.board[b][c]}function s(b,c){return a.state.delta&&a.state.delta.row===b&&a.state.delta.col===c}a.currentUpdateUI=null,a.didMakeMove=!1,a.animationEndedTimeout=null,a.state=null,a.init=b,a.updateUI=e,a.cellClicked=o,a.shouldShowImage=p,a.isPieceX=q,a.isPieceO=r,a.shouldSlowlyAppear=s}(game||(game={})),angular.module("myApp",["gameServices"]).run(function(){$rootScope.game=game,game.init()});var aiService;!function(a){function b(a){return d(a,{millisecondsLimit:1e3})}function c(a,b){for(var c=[],d=0;d<gameLogic.ROWS;d++)for(var e=0;e<gameLogic.COLS;e++)try{c.push(gameLogic.createMove(a,d,e,b))}catch(f){}return c}function d(a,b){return alphaBetaService.alphaBetaDecision(a,a.turnIndexAfterMove,f,e,null,b)}function e(a,b){var c=a.endMatchScores;return c?c[0]>c[1]?Number.POSITIVE_INFINITY:c[0]<c[1]?Number.NEGATIVE_INFINITY:0:0}function f(a,b){return c(a.stateAfterMove,b)}a.findComputerMove=b,a.getPossibleMoves=c,a.createComputerMove=d}(aiService||(aiService={}));
//# sourceMappingURL=everything.min.js.map